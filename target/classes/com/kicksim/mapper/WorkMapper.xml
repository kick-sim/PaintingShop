<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kicksim.mapper.WorkMapper">
	<!-- criteria(검색조건) -->
	<sql id="criteria">
		<trim prefix="where (" suffix=")" prefixOverrides="AND">
			<foreach item="type" collection="typeArr">
				<trim prefix="AND">
					<choose>
						<when test="type == 'A'.toString()">
							<trim prefixOverrides="or">
								<!-- authorId는 배열형태이기 때문 -->
								<foreach collection="authorArr" item="authorId">
									<trim prefix="or">
										a.authorId = #{authorId}
									</trim>
								</foreach>
							</trim>
						</when>
						<when test="type == 'C'.toString()">
							a.cateCode like concat ('%', #{cateCode}, '%')
						</when>
						<when test="type == 'T'.toString()">
							workName like concat ('%', #{keyword}, '%')
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>

	</sql>

	<!-- 상품 검색 -->
	<select id="getGoodsList" resultType="com.kicksim.model.WorkVO">

		select workId, workName, b.authorName, a.authorId, c.cateName,
		a.cateCode, exhibiter, exhibitYear, workPrice, workDiscount
		from
		kicksim_work a left outer join kicksim_author b on a.authorId =
		b.authorId
		left outer join kicksim_bcate c on a.cateCode = c.cateCode
		<include refid="criteria"></include>
		order by workId desc
		limit #{skip}, #{amount}

	</select>

	<!-- 상품 총 개수 -->
	<select id="goodsGetTotal" resultType="int">

		select count(*) from kicksim_work a

		<include refid="criteria"></include>

	</select>
	<!-- 작가 id 리스트 요청 -->
	<select id="getAuthorIdList" resultType="String">

		select authorid from
		kicksim_author where authorname like concat ('%',
		#{keyword}, '%')

	</select>

	<!-- 검색 대상 카테고리 리스트 -->
	<select id="getCateList" resultType="String">

		select distinct cateCode from kicksim_work where
		<foreach item="type" collection="typeArr">
			<choose>
				<when test="type == 'A'.toString()">
					<trim prefixOverrides="or">
						<foreach collection="authorArr" item="authorId">
							<trim prefix="or">
								authorId = #{authorId}
							</trim>
						</foreach>
					</trim>
				</when>
				<when test="type == 'T'.toString()">
					workName like concat ('%', #{keyword}, '%')
				</when>
			</choose>
		</foreach>

	</select>
	<!-- 카테고리 정보(+검색대상 갯수) -->		
	<select id="getCateInfo" resultType="com.kicksim.model.CateFilterDTO">
	
		select DISTINCT count(*) cateCount, a.cateCode,b.cateName from kicksim_work a left join kicksim_bcate b on a.cateCode = b.cateCode 
		
		where 

		<foreach item="type" collection="typeArr">		
  				<choose>
  					<when test="type == 'A'.toString()">
  					
  						<trim prefix="(" suffix=")" prefixOverrides="or">
  						
		  					<foreach collection="authorArr" item="authorId">
		  					
		  						<trim prefix="or">
		  						
		  							authorId = #{authorId}
		  							
		  						</trim>
		  						
		  					</foreach>
		  					  						
  						</trim>
  						
  						and a.cateCode = #{cateCode}
  						
  					</when>
  					
  					<when test="type == 'T'.toString()">
  					
  						workName like concat ('%', #{keyword}, '%') and a.cateCode = #{cateCode}
  						 
  					</when>
  					  					
  				</choose>
  		</foreach>
	
	</select>
	<!-- 상품 정보 -->
	<select id="getGoodsInfo" resultType="com.kicksim.model.WorkVO">
	
			select a.WORKID, a.WORKNAME, a.AUTHORID, b.AUTHORNAME, a.EXHIBITYEAR, a.EXHIBITER, a.CATECODE, c.CATENAME, a.WORKPRICE, a.WORKSTOCK, a.WORKDISCOUNT, a.WORKINTRO, a.WORKCONTENTS
			from kicksim_work a left outer join kicksim_author b on a.authorId = b.authorId
			left outer join kicksim_bcate c on a.catecode = c.catecode
			where workid = ${workId}	
	
	</select>

</mapper>